apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "cz.muni.fi.pv256.hw8"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    buildTypes {
        release {
            applicationIdSuffix '.x422715'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion '28.0.3'
}

androidExtensions {
    experimental = true
}

configurations {
    ktlint
}

dependencies {
    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    ktlint "com.github.shyiko:ktlint:0.28.0"
    //AndroidX
    implementation "androidx.appcompat:appcompat:$androidx_version"
    implementation "com.google.android.material:material:$androidx_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$androidx_lifecycle_version"
    //Constraint Layout
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //KTX
    implementation 'androidx.core:core-ktx:1.0.1'
    //Tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // use kapt for Kotlin
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'
    //Custom
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

task checkstyle(type: Checkstyle) {
    configProperties.checkstyleSuppressionsPath = new File(rootDir, "app/config/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

task findbugs(type: FindBugs, dependsOn: "assembleDebug") {
    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    classes = files("${project.rootDir}/app/build/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination file("${project.buildDir}/reports/findbugs/findbugs.xml")
        }
        html {
            destination file("${project.buildDir}/reports/findbugs/findbugs.html")
        }
    }

    classpath = files()
}

task pmd(type: Pmd, dependsOn: "assembleDebug") {
    ignoreFailures = false
    ruleSetFiles = files("${project.rootDir}/app/config/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/pmd/pmd.xml"
        }
        html {
            destination "$project.buildDir/reports/pmd/pmd.html"
        }
    }
}

check.dependsOn 'ktlint', 'checkstyle', 'findbugs', 'lint', 'pmd'
